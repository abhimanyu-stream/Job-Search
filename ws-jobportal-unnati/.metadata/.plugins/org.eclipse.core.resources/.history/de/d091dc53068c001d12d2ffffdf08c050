# Eureka Client
eureka.client.serviceUrl.defaultZone  = http://localhost:8761/eureka
eureka.client.instance.preferIpAddress = true
spring.application.name = payment-service

server.port = 9091

# MySQL DB JDBC

spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost/payment?allowPublicKeyRetrieval=true&useSSL=false
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.hibernate.ddl-auto=update

# Hibernate Properties
spring.jpa.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.hbm2ddl.auto=update
spring.jpa.hibernate.show_sql=true
spring.jpa.hibernate.format_sql=true
spring.jpa.hibernate.connection.pool_size=5
spring.jpa.hibernate.current_session_context_class=thread


entitymanager.packages.to.scan=


#Logging
logging.level.web=DEBUG


##################START ADMIN SERVER####################
# BELOW IS CLIENT CONFIGURATION #

# URL where Admin Server is running
spring.boot.admin.client.url=http://localhost:8383
spring.boot.admin.client.instance.service-base-url=http://localhost:8383
# server.port=0 its means is random port, so there is no collision on port 8383
# otherwise do as below
# client instances port are below
#server.port=0
#server.port=8384
#server.port=8385
# Expose all the Actuator endpoints
management.endpoints.web.exposure.include=*
# Show details in Health check section
management.endpoint.health.show-details=always
# If you don't set this, username 'user' will be used by default
# And a password will be auto-generated each time your app starts
# Such password is visible in the console during app startup
# BELOW ARE CLIENT USERNAME AND PASSWORD, SO THAT CLIENTS API ENDPOINT CAN BE ACCESSED AS SPRING SECURITY IS ENABLED HERE
spring.security.user.name=analytiq-username
spring.security.user.password=analytiq-password
# Provide username and password for Spring Boot Admin Server
# To connect to the client
# BELOW ARE CLIENT USERNAME AND PASSWORD TOO I.E SAME
spring.boot.admin.client.instance.metadata.user.name=analytiq123
spring.boot.admin.client.instance.metadata.user.password=analytiq123password
# Credentials to authenticate with the Admin Server
# BELOW ARE SERVER USERNAME AND PASSWORD SO THAT CLIENTS WOULD BE GET REGISTERED THERE ITSELF, I.E IS ADMIN SERVER
# AS SPRING SECURITY IS ENABLED HERE TOO
spring.boot.admin.client.username=analytiq-username
spring.boot.admin.client.password=analytiq-password


##################END ADMIN SERVER####################



########## Swagger3 API Documentation Start##########
api.version=1.0
tos.uri=terms-of-service
toc.uri=terms-of-condition
api.server.url=localhost:9091/
api.server.url.prod=
api.server.url.qa=
api.server.url.dev=
api.description=The User API is used to create, update, and delete users and reset its password, change the user's Role if required form existing Role of User [  ROLE_MODERATOR,  ROLE_ADMIN,  ROLE_USER]  . If an account is created, the user will be granted the <strong>ROLE_USER</strong> role. The Post API is for creating post and doing CRUD operation . Each endpoints can be accessed by User's Role Type[  ROLE_MODERATOR,  ROLE_ADMIN,  ROLE_USER]
springdoc.swagger-ui.operationsSorter=analytiq
springdoc.swagger-ui.tagsSorter=analytiq

########## Swagger3 API Documentation End##########





